// Generated by CoffeeScript 1.10.0
(function() {
  var LifeFormControl, ref, root,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.grow_journal = (ref = root.grow_journal) != null ? ref : {};

  LifeFormControl = (function() {
    function LifeFormControl() {
      this.clearLifeForms = bind(this.clearLifeForms, this);
      this.setSelectedLifeForm = bind(this.setSelectedLifeForm, this);
      this.addLifeForm = bind(this.addLifeForm, this);
      this.selectedLifeForm = ko.observable(-1);
      this.displayNameToLifeForm = {};
    }

    LifeFormControl.prototype.addLifeForm = function(displayName, lifeForm) {
      return this.displayNameToLifeForm[displayName] = lifeForm;
    };

    LifeFormControl.prototype.setSelectedLifeForm = function(displayName) {
      this.selectedLifeForm(-1);
      if (displayName in this.displayNameToLifeForm) {
        return this.selectedLifeForm(this.displayNameToLifeForm[displayName].id);
      }
    };

    LifeFormControl.prototype.clearLifeForms = function() {
      this.selectedLifeForm(-1);
      return this.displayNameToLifeForm = {};
    };

    return LifeFormControl;

  })();

  root.grow_journal.LifeFormControl = LifeFormControl;

}).call(this);

//# sourceMappingURL=life-form-control.js.map
